{"version":3,"sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/pairs.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/variance.js","../node_modules/d3-array/src/deviation.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/constant.js","../node_modules/d3-array/src/identity.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/histogram.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-array/src/max.js","../node_modules/d3-array/src/mean.js","../node_modules/d3-array/src/median.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-array/src/min.js","../node_modules/d3-array/src/permute.js","../node_modules/d3-array/src/scan.js","../node_modules/d3-array/src/shuffle.js","../node_modules/d3-array/src/sum.js","../node_modules/d3-array/src/transpose.js","../node_modules/d3-array/src/zip.js","../node_modules/d3-array/src/index.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-geo/src/index.js"],"names":["a","b","NaN","f","compare","length","d","x","ascending","left","lo","hi","mid","right","ascendingBisect","bisector","bisectRight","bisectLeft","bisect","pair","i","n","array","p","pairs","Array","i0","i1","value0","n0","values0","n1","values1","values","reduce","value","delta","m","mean","sum","valueof","isNaN","number","v","variance","Math","sqrt","min","max","prototype","slice","map","start","stop","step","arguments","ceil","range","e10","e5","e2","reverse","ticks","count","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","LN2","identity","domain","extent","threshold","sturges","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","constant","thresholds","call","sort","quantile","deviation","numbers","merged","arrays","j","indexes","permutes","xi","xj","t","random","matrix","transpose","row","Adder","this","reset","constructor","s","add","y","_add","temp","valueOf","adder","bv","av","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","sin","sign","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","phi00","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","ranges","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","normal","inflection","phii","lambdai","antimeridian","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","Z0","Z1","X2","Y2","Z2","z0","deltaMax","Infinity","feature","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","rotate","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","circleRadius","ring","center","precision","circle","c","apply","r","line","lines","rejoin","concat","result","Intersection","points","other","entry","o","e","subject","clip","segments","forEach","segment","p0","p1","pointEqual","compareIntersection","startInside","current","isSubject","interpolate","longitude","angle","winding","polygon","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","arc","intersection","phiArc","sink","clipLine","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointVisible","pointLine","clean","ringSegments","filter","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","t2","q","polar","q1","code","c0","v0","v00","point2","ax","ay","dx","dy","y0","y1","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","cache","cacheStream","_stream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ao","bo","ab","ringRadians","pointRadians","graticuleX","graticuleY","X1","X0","Y1","Y0","X","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","area","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","_circle","join","projectionStream","contextStream","path","measure","projection","transformer","methods","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","h","size","width","height","maxDepth","cosMinDistance","delta2","project","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","theta","preclip","postclip","recenter","resample","transformRotate","undefined","clipAngle","fitExtent","fitSize","fitWidth","fitHeight","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","lower48Point","alaskaPoint","hawaiiPoint","lower48","albers","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","fy","equirectangularRaw","conicEquidistantRaw","g","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","kx","ky","tx","ty","sx","sy","_postclip","reflectX","reflectY","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw"],"mappings":"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","file":"static/js/9.fc71c296.chunk.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","export default function (array, f) {\n  if (f == null) f = pair;\n  var i = 0,\n      n = array.length - 1,\n      p = array[0],\n      pairs = new Array(n < 0 ? 0 : n);\n\n  while (i < n) {\n    pairs[i] = f(p, p = array[++i]);\n  }\n\n  return pairs;\n}\nexport function pair(a, b) {\n  return [a, b];\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}","import variance from \"./variance\";\nexport default function (array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return x;\n}","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","import { slice } from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport { tickStep } from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\nexport default function () {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    } // Remove any thresholds outside the domain.\n\n\n    var m = tz.length;\n\n    while (tz[0] <= x0) {\n      tz.shift(), --m;\n    }\n\n    while (tz[m - 1] > x1) {\n      tz.pop(), --m;\n    }\n\n    var bins = new Array(m + 1),\n        bin; // Initialize bins.\n\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    } // Assign data to bins by value, ignoring any outside the domain.\n\n\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}","import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","import { map } from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\nexport default function (values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}","import deviation from \"../deviation\";\nexport default function (values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;else --m;\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\nexport default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}","export default function (array, indexes) {\n  var i = indexes.length,\n      permutes = new Array(i);\n\n  while (i--) {\n    permutes[i] = array[indexes[i]];\n  }\n\n  return permutes;\n}","import ascending from \"./ascending\";\nexport default function (values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}","export default function (array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  } else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}","import min from \"./min\";\nexport default function (matrix) {\n  if (!(n = matrix.length)) return [];\n\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","export { default as bisect, bisectRight, bisectLeft } from \"./bisect\";\nexport { default as ascending } from \"./ascending\";\nexport { default as bisector } from \"./bisector\";\nexport { default as cross } from \"./cross\";\nexport { default as descending } from \"./descending\";\nexport { default as deviation } from \"./deviation\";\nexport { default as extent } from \"./extent\";\nexport { default as histogram } from \"./histogram\";\nexport { default as thresholdFreedmanDiaconis } from \"./threshold/freedmanDiaconis\";\nexport { default as thresholdScott } from \"./threshold/scott\";\nexport { default as thresholdSturges } from \"./threshold/sturges\";\nexport { default as max } from \"./max\";\nexport { default as mean } from \"./mean\";\nexport { default as median } from \"./median\";\nexport { default as merge } from \"./merge\";\nexport { default as min } from \"./min\";\nexport { default as pairs } from \"./pairs\";\nexport { default as permute } from \"./permute\";\nexport { default as quantile } from \"./quantile\";\nexport { default as range } from \"./range\";\nexport { default as scan } from \"./scan\";\nexport { default as shuffle } from \"./shuffle\";\nexport { default as sum } from \"./sum\";\nexport { default as ticks, tickIncrement, tickStep } from \"./ticks\";\nexport { default as transpose } from \"./transpose\";\nexport { default as variance } from \"./variance\";\nexport { default as zip } from \"./zip\";","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function sphere() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","import clipRectangle from \"./rectangle\";\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon2, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab) return true;\n    }\n\n    ao = bo;\n  }\n\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { degrees, pi, radians } from \"../math\";\nimport { projectionMutator } from \"./index\";\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}","import { abs, asin, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0),\n      n = (sy0 + sin(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n  var c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function (x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n}","import { asin, cos, sin } from \"../math\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}","import conicEqualArea from \"./conicEqualArea\";\nexport default function () {\n  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n}","import { epsilon } from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\"; // The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\n\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function point(x, y) {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].point(x, y);\n      }\n    },\n    sphere: function sphere() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].sphere();\n      }\n    },\n    lineStart: function lineStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineStart();\n      }\n    },\n    lineEnd: function lineEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineEnd();\n      }\n    },\n    polygonStart: function polygonStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonStart();\n      }\n    },\n    polygonEnd: function polygonEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonEnd();\n      }\n    }\n  };\n} // A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\nexport default function () {\n  var cache,\n      cacheStream,\n      lower48 = albers(),\n      lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n  hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n  _point,\n      pointStream = {\n    point: function point(x, y) {\n      _point = [x, y];\n    }\n  };\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);\n  }\n\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    return reset();\n  };\n\n  albersUsa.fitExtent = function (extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function (size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function (width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function (height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import { abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { mercatorRaw } from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) {\n      if (y < -halfPi + epsilon) y = -halfPi + epsilon;\n    } else {\n      if (y > halfPi - epsilon) y = halfPi - epsilon;\n    }\n\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function (x, y) {\n    var fy = f - y,\n        r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport { transformer } from \"../transform\";\nimport { fitExtent as _fitExtent, fitSize as _fitSize, fitWidth as _fitWidth, fitHeight as _fitHeight } from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function point(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      transform = identity,\n      // scale, translate and reflect\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      // clip extent\n  _postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = transform(_postclip(cacheStream = _stream));\n    },\n    postclip: function postclip(_) {\n      return arguments.length ? (_postclip = _, x0 = y0 = x1 = y1 = null, reset()) : _postclip;\n    },\n    clipExtent: function clipExtent(_) {\n      return arguments.length ? (_postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function scale(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function translate(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function reflectX(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function reflectY(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function fitExtent(extent, object) {\n      return _fitExtent(projection, extent, object);\n    },\n    fitSize: function fitSize(size, object) {\n      return _fitSize(projection, size, object);\n    },\n    fitWidth: function fitWidth(width, object) {\n      return _fitWidth(projection, width, object);\n    },\n    fitHeight: function fitHeight(height, object) {\n      return _fitHeight(projection, height, object);\n    }\n  };\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export { default as geoArea } from \"./area\";\nexport { default as geoBounds } from \"./bounds\";\nexport { default as geoCentroid } from \"./centroid\";\nexport { default as geoCircle } from \"./circle\";\nexport { default as geoClipAntimeridian } from \"./clip/antimeridian\";\nexport { default as geoClipCircle } from \"./clip/circle\";\nexport { default as geoClipExtent } from \"./clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\nexport { default as geoClipRectangle } from \"./clip/rectangle\";\nexport { default as geoContains } from \"./contains\";\nexport { default as geoDistance } from \"./distance\";\nexport { default as geoGraticule, graticule10 as geoGraticule10 } from \"./graticule\";\nexport { default as geoInterpolate } from \"./interpolate\";\nexport { default as geoLength } from \"./length\";\nexport { default as geoPath } from \"./path/index\";\nexport { default as geoAlbers } from \"./projection/albers\";\nexport { default as geoAlbersUsa } from \"./projection/albersUsa\";\nexport { default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw } from \"./projection/azimuthalEqualArea\";\nexport { default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw } from \"./projection/azimuthalEquidistant\";\nexport { default as geoConicConformal, conicConformalRaw as geoConicConformalRaw } from \"./projection/conicConformal\";\nexport { default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw } from \"./projection/conicEqualArea\";\nexport { default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw } from \"./projection/conicEquidistant\";\nexport { default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw } from \"./projection/equalEarth\";\nexport { default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw } from \"./projection/equirectangular\";\nexport { default as geoGnomonic, gnomonicRaw as geoGnomonicRaw } from \"./projection/gnomonic\";\nexport { default as geoIdentity } from \"./projection/identity\";\nexport { default as geoProjection, projectionMutator as geoProjectionMutator } from \"./projection/index\";\nexport { default as geoMercator, mercatorRaw as geoMercatorRaw } from \"./projection/mercator\";\nexport { default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw } from \"./projection/naturalEarth1\";\nexport { default as geoOrthographic, orthographicRaw as geoOrthographicRaw } from \"./projection/orthographic\";\nexport { default as geoStereographic, stereographicRaw as geoStereographicRaw } from \"./projection/stereographic\";\nexport { default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw } from \"./projection/transverseMercator\";\nexport { default as geoRotation } from \"./rotation\";\nexport { default as geoStream } from \"./stream\";\nexport { default as geoTransform } from \"./transform\";"],"sourceRoot":""}