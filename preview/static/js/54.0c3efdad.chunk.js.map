{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","app/apps/TodoList.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","TodoList","className","aria-label","href","onClick","evt","preventDefault","aria-current","TodoListComponent","Component","props","state","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","target","checked","setState","unshift","index","splice","value","onSubmit","type","placeholder","onChange","required","map","ListItem","changed","key","remove","htmlFor","children"],"mappings":"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","file":"static/js/54.0c3efdad.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from 'react'\n\nexport class TodoList extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Todo List\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={evt =>evt.preventDefault()}>Apps</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Todo List</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Todo List</h4>\n                                <TodoListComponent />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class TodoListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            todos: [\n                {\n                    id: 1,\n                    task: 'Pick up kids from school',\n                    isCompleted: false\n                },\n                {\n                    id: 2,\n                    task: 'Prepare for presentation',\n                    isCompleted: true\n                },\n                {\n                    id: 3,\n                    task: 'Print Statements',\n                    isCompleted: false\n                },\n                {\n                    id: 4,\n                    task: 'Create invoice',\n                    isCompleted: false\n                },\n                {\n                    id: 5,\n                    task: 'Call John',\n                    isCompleted: true\n                },\n                {\n                    id: 6,\n                    task: 'Meeting with Alisa',\n                    isCompleted: false\n                }\n            ],\n            inputValue: '',\n        }\n\n        this.statusChangedHandler = this.statusChangedHandler.bind(this);\n        this.addTodo = this.addTodo.bind(this);\n        this.removeTodo = this.removeTodo.bind(this);\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    }\n\n    statusChangedHandler(event, id) {\n        const todo = {...this.state.todos[id]};\n        todo.isCompleted = event.target.checked;\n\n        const todos = [...this.state.todos];\n        todos[id] = todo;\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    addTodo (event) {\n        event.preventDefault();\n\n        const todos = [...this.state.todos];\n        todos.unshift({\n            id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n            task: this.state.inputValue,\n            isCompleted: false\n            \n        })\n\n        this.setState({\n            todos: todos,\n            inputValue: ''\n        })\n    }\n\n    removeTodo (index) {\n        const todos = [...this.state.todos];\n        todos.splice(index, 1);\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    inputChangeHandler(event) {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <form  className=\"add-items d-flex\" onSubmit={this.addTodo}>\n                    <input \n                        type=\"text\" \n                        className=\"form-control h-auto\" \n                        placeholder=\"What do you need to do today?\" \n                        value={this.state.inputValue} \n                        onChange={this.inputChangeHandler}\n                        required />\n                    <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n                </form>\n                <div className=\"list-wrapper\">\n                    <ul className=\"d-flex flex-column todo-list\">\n                        {this.state.todos.map((todo, index) =>{\n                            return <ListItem \n                            isCompleted={todo.isCompleted}\n                            changed={(event) => this.statusChangedHandler(event, index)}\n                            key={todo.id}\n                            remove={() => this.removeTodo(index) }\n                            >{todo.task}</ListItem>\n                        })}\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\n\nconst ListItem = (props) => {\n    \n    return (\n        <li className={(props.isCompleted ? 'completed' : null)}>\n            <div className=\"form-check\">\n                <label htmlFor=\"\" className=\"form-check-label\"> \n                    <input className=\"checkbox\" type=\"checkbox\" \n                        checked={props.isCompleted} \n                        onChange={props.changed} \n                        /> {props.children} <i className=\"input-helper\"></i>\n                </label>\n            </div>\n            <i className=\"remove mdi mdi-close-box\" onClick={props.remove}></i>\n        </li>\n    )\n};\n\nexport default TodoList\n"],"sourceRoot":""}