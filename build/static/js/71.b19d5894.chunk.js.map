{"version":3,"sources":["app/apps/TodoList.js"],"names":["TodoList","className","aria-label","href","onClick","evt","preventDefault","aria-current","TodoListComponent","Component","props","state","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","target","checked","setState","unshift","length","index","splice","value","onSubmit","type","placeholder","onChange","required","map","ListItem","changed","key","remove","htmlFor","children"],"mappings":"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","file":"static/js/71.b19d5894.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class TodoList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        Todo List\r\n                    </h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={evt =>evt.preventDefault()}>Apps</a></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Todo List</li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"card px-3\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Todo List</h4>\r\n                                <TodoListComponent />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class TodoListComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            todos: [\r\n                {\r\n                    id: 1,\r\n                    task: 'Pick up kids from school',\r\n                    isCompleted: false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    task: 'Prepare for presentation',\r\n                    isCompleted: true\r\n                },\r\n                {\r\n                    id: 3,\r\n                    task: 'Print Statements',\r\n                    isCompleted: false\r\n                },\r\n                {\r\n                    id: 4,\r\n                    task: 'Create invoice',\r\n                    isCompleted: false\r\n                },\r\n                {\r\n                    id: 5,\r\n                    task: 'Call John',\r\n                    isCompleted: true\r\n                },\r\n                {\r\n                    id: 6,\r\n                    task: 'Meeting with Alisa',\r\n                    isCompleted: false\r\n                }\r\n            ],\r\n            inputValue: '',\r\n        }\r\n\r\n        this.statusChangedHandler = this.statusChangedHandler.bind(this);\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    }\r\n\r\n    statusChangedHandler(event, id) {\r\n        const todo = {...this.state.todos[id]};\r\n        todo.isCompleted = event.target.checked;\r\n\r\n        const todos = [...this.state.todos];\r\n        todos[id] = todo;\r\n\r\n        this.setState({\r\n            todos: todos\r\n        })\r\n    }\r\n\r\n    addTodo (event) {\r\n        event.preventDefault();\r\n\r\n        const todos = [...this.state.todos];\r\n        todos.unshift({\r\n            id: todos.length ? todos[todos.length - 1].id + 1 : 1,\r\n            task: this.state.inputValue,\r\n            isCompleted: false\r\n            \r\n        })\r\n\r\n        this.setState({\r\n            todos: todos,\r\n            inputValue: ''\r\n        })\r\n    }\r\n\r\n    removeTodo (index) {\r\n        const todos = [...this.state.todos];\r\n        todos.splice(index, 1);\r\n\r\n        this.setState({\r\n            todos: todos\r\n        })\r\n    }\r\n\r\n    inputChangeHandler(event) {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form  className=\"add-items d-flex\" onSubmit={this.addTodo}>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control h-auto\" \r\n                        placeholder=\"What do you need to do today?\" \r\n                        value={this.state.inputValue} \r\n                        onChange={this.inputChangeHandler}\r\n                        required />\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                </form>\r\n                <div className=\"list-wrapper\">\r\n                    <ul className=\"d-flex flex-column todo-list\">\r\n                        {this.state.todos.map((todo, index) =>{\r\n                            return <ListItem \r\n                            isCompleted={todo.isCompleted}\r\n                            changed={(event) => this.statusChangedHandler(event, index)}\r\n                            key={todo.id}\r\n                            remove={() => this.removeTodo(index) }\r\n                            >{todo.task}</ListItem>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst ListItem = (props) => {\r\n    \r\n    return (\r\n        <li className={(props.isCompleted ? 'completed' : null)}>\r\n            <div className=\"form-check\">\r\n                <label htmlFor=\"\" className=\"form-check-label\"> \r\n                    <input className=\"checkbox\" type=\"checkbox\" \r\n                        checked={props.isCompleted} \r\n                        onChange={props.changed} \r\n                        /> {props.children} <i className=\"input-helper\"></i>\r\n                </label>\r\n            </div>\r\n            <i className=\"remove mdi mdi-close-box\" onClick={props.remove}></i>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default TodoList\r\n"],"sourceRoot":""}