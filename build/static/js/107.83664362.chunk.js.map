{"version":3,"sources":["app/maps/SimpleMap.js"],"names":["geoUrl","SimpleMap","className","aria-label","href","onClick","event","preventDefault","aria-current","zoom","geography","geographies","map","geo","key","rsmKey","projectionConfig","scale","stroke","strokeWidth","projection","fill","coordinates","r","center","from","to","strokeLinecap","Component"],"mappings":"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","file":"static/js/107.83664362.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  ZoomableGroup,\r\n  Sphere,\r\n  Graticule,\r\n  Marker,\r\n  Line\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nexport class SimpleMap extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"page-header\">\r\n          <h3 className=\"page-title\"> React Simple Maps </h3>\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Maps</a></li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Simple Maps</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">ZoomableGroup</h4>\r\n                <div className=\"map-dimension\">\r\n                  <ComposableMap>\r\n                    <ZoomableGroup zoom={1}>\r\n                      <Geographies geography={geoUrl}>\r\n                        {({ geographies }) =>\r\n                          geographies.map(geo => (\r\n                            <Geography key={geo.rsmKey} geography={geo} />\r\n                          ))\r\n                        }\r\n                      </Geographies>\r\n                    </ZoomableGroup>\r\n                  </ComposableMap>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Sphere</h4>\r\n                <div className=\"map-dimension\">\r\n                  <ComposableMap projectionConfig={{ scale: 147 }}>\r\n                    <Sphere stroke=\"#FF5533\" strokeWidth={2} />\r\n                    <Geographies geography={geoUrl}>\r\n                      {({ geographies }) =>\r\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n                      }\r\n                    </Geographies>\r\n                  </ComposableMap>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Graticule</h4>\r\n                <div className=\"map-dimension\">\r\n                <ComposableMap projectionConfig={{ scale: 147 }}>\r\n                  <Graticule stroke=\"#F53\" />\r\n                  <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                      geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n                    }\r\n                  </Geographies>\r\n                </ComposableMap>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Geographies</h4>\r\n                <div className=\"map-dimension\">\r\n                  <ComposableMap>\r\n                    <Geographies geography={geoUrl}>\r\n                      {({ geographies }) =>\r\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n                      }\r\n                    </Geographies>\r\n                  </ComposableMap>`\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Marker</h4>\r\n                <div className=\"map-dimension\">\r\n                  <ComposableMap projection=\"geoAlbers\">\r\n                    <Geographies geography={geoUrl}>\r\n                      {({ geographies }) =>\r\n                        geographies.map(geo => (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            fill=\"#DDD\"\r\n                            stroke=\"#FFF\"\r\n                          />\r\n                        ))\r\n                      }\r\n                    </Geographies>\r\n                    <Marker coordinates={[-74.006, 40.7128]}>\r\n                      <circle r={8} fill=\"#F53\" />\r\n                    </Marker>\r\n                  </ComposableMap>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Line</h4>\r\n                <div className=\"map-dimension\">\r\n                  <ComposableMap\r\n                    projection=\"geoEqualEarth\"\r\n                    projectionConfig={{\r\n                      scale: 420,\r\n                      center: [-40, 30]\r\n                    }}\r\n                  >\r\n                    <Graticule stroke=\"#DDD\" />\r\n                    <Geographies\r\n                      geography={geoUrl}\r\n                      fill=\"#D6D6DA\"\r\n                      stroke=\"#FFFFFF\"\r\n                      strokeWidth={0.5}\r\n                    >\r\n                      {({ geographies }) =>\r\n                        geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n                      }\r\n                    </Geographies>\r\n                    <Line\r\n                      from={[2.3522, 48.8566]}\r\n                      to={[-74.006, 40.7128]}\r\n                      stroke=\"#FF5533\"\r\n                      strokeWidth={4}\r\n                      strokeLinecap=\"round\"\r\n                    />\r\n                  </ComposableMap>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SimpleMap\r\n"],"sourceRoot":""}