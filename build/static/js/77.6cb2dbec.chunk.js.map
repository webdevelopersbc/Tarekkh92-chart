{"version":3,"sources":["app/basic-ui/Modals.js"],"names":["Modals","useState","smShow","setSmShow","mdShow","setMdShow","lgShow","setLgShow","className","aria-label","href","onClick","event","preventDefault","aria-current","Dialog","size","Header","closeButton","Title","Body","Footer","variant","show","onHide","aria-labelledby"],"mappings":"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","file":"static/js/77.6cb2dbec.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction Modals () {\r\n  const [smShow, setSmShow] = useState(false);\r\n  const [mdShow, setMdShow] = useState(false);\r\n  const [lgShow, setLgShow] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n        <h3 className=\"page-title\"> Modals </h3>\r\n        <nav aria-label=\"breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">Modals</li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Large Modal</h4>\r\n              <p className=\"card-description\">Large sized modal with max-width set to <code>90%</code></p>\r\n                {/* Dummy Modal Starts  */}\r\n              <Modal.Dialog size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                  <p>Modal body text goes here.</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer className=\"flex-wrap\">\r\n                  <Button variant=\"success m-2\">Submit</Button>\r\n                  <Button variant=\"light m-2\">Cancel</Button>\r\n                </Modal.Footer>\r\n              </Modal.Dialog>\r\n              {/* Dummy Modal Ends */}\r\n              {/* Modal starts */}\r\n              <div className=\"text-center\">\r\n                <Button onClick={() => setLgShow(true)} className=\"btn-sm\">Large modal<i className=\"mdi mdi-arrow-right-circle-outline ml-1\"></i></Button>\r\n              </div>\r\n              <Modal\r\n                size=\"lg\"\r\n                show={lgShow}\r\n                onHide={() => setLgShow(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                  <p>Modal body text goes here.</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                  <Button variant=\"success m-2\" onClick={() => setLgShow(false)}>Submit</Button>\r\n                  <Button variant=\"light mb-\" onClick={() => setLgShow(false)}>Cancel</Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n              {/* Modal Ends */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Medium Modal</h4>\r\n              <p className=\"card-description\">Normal modal with default bootstrap settings</p>\r\n                {/* Dummy Modal Starts  */}\r\n                <Modal.Dialog>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                    <p>Modal body text goes here.</p>\r\n                  </Modal.Body>\r\n\r\n                  <Modal.Footer className=\"flex-wrap\">\r\n                    <Button variant=\"success m-2\">Submit</Button>\r\n                    <Button variant=\"light m-2\">Cancel</Button>\r\n                  </Modal.Footer>\r\n                </Modal.Dialog>\r\n                {/* Dummy Modal Ends */}\r\n                {/* Modal starts */}\r\n                <div className=\"text-center\">\r\n                  <Button onClick={() => setMdShow(true)} className=\"btn-sm\">Medium modal<i className=\"mdi mdi-arrow-right-circle-outline ml-1\"></i></Button>\r\n                </div>\r\n                <Modal\r\n                  show={mdShow}\r\n                  onHide={() => setMdShow(false)}\r\n                  aria-labelledby=\"example-modal-sizes-title-md\"\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                    <p>Modal body text goes here.</p>\r\n                  </Modal.Body>\r\n\r\n                  <Modal.Footer className=\"fleex-wrap\">\r\n                    <Button variant=\"success m-2\" onClick={() => setMdShow(false)}>Submit</Button>\r\n                    <Button variant=\"light m-2\" onClick={() => setMdShow(false)}>Cancel</Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              {/* Modal Ends */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Small Modal</h4>\r\n              <p className=\"card-description\">Small modal with max-width set to 300px</p>\r\n                {/* Dummy Modal Starts  */}\r\n                <Modal.Dialog size=\"sm\">\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                    <p>Modal body text goes here.</p>\r\n                  </Modal.Body>\r\n\r\n                  <Modal.Footer className=\"flex-wrap\">\r\n                    <Button variant=\"success btn-sm m-2\">Submit</Button>\r\n                    <Button variant=\"light btn-sm m-2\">Cancel</Button>\r\n                  </Modal.Footer>\r\n                </Modal.Dialog>\r\n                {/* Dummy Modal Ends */}\r\n                {/* Modal starts */}\r\n                <div className=\"text-center\">\r\n                  <Button onClick={() => setSmShow(true)} className=\"btn-sm\">Small modal<i className=\"mdi mdi-arrow-right-circle-outline ml-1\"></i></Button>\r\n                </div>\r\n                <Modal\r\n                  size=\"sm\"\r\n                  show={smShow}\r\n                  onHide={() => setSmShow(false)}\r\n                  aria-labelledby=\"example-modal-sizes-title-sm\"\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                    <p>Modal body text goes here.</p>\r\n                  </Modal.Body>\r\n\r\n                  <Modal.Footer className=\"flex-wrap\">\r\n                    <Button variant=\"success btn-sm m-2\" onClick={() => setSmShow(false)}>Submit</Button>\r\n                    <Button variant=\"light btn-sm m-2\" onClick={() => setSmShow(false)}>Cancel</Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              {/* Modal Ends */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modals\r\n"],"sourceRoot":""}